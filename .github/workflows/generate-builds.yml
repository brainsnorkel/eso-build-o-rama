name: Generate ESO Builds (Staggered)

on:
  schedule:
    # Every hour, cycling through all 14 trials sequentially
    # AA at 20:00 UTC, HRC at 21:00 UTC, SO at 22:00 UTC, etc.
    # Each trial gets updated every 14 hours (14 trials Ã— 1 hour)
    - cron: '0 * * * *'  # Every hour at :00
  workflow_dispatch:
    inputs:
      trial_id:
        description: 'Trial ID to scan (leave empty for auto-detect based on time)'
        required: false
        type: number
  push:
    branches:
      - main  # Only run on main branch pushes

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  generate-trial:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Determine which trial to run
        id: trial
        run: |
          if [ -n "${{ inputs.trial_id }}" ]; then
            echo "trial_id=${{ inputs.trial_id }}" >> $GITHUB_OUTPUT
          else
            # Sequential trial scheduling: AA, HRC, SO, MoL, HoF, AS, CR, SS, KA, RG, DSR, SE, LC, OC
            # Each trial runs every 14 hours (one trial per hour)
            # Starting reference: 20:00 UTC for AA
            
            CURRENT_HOUR=$(date -u +%H | sed 's/^0*//' || echo "0")
            
            # Hours since 20:00 UTC reference
            REFERENCE_HOUR=20
            HOURS_SINCE_REFERENCE=$(( CURRENT_HOUR - REFERENCE_HOUR ))
            
            # Handle negative values (if current time is before reference)
            if [ $HOURS_SINCE_REFERENCE -lt 0 ]; then
              HOURS_SINCE_REFERENCE=$((HOURS_SINCE_REFERENCE + 24))
            fi
            
            # Trial index = hours since reference % 14
            TRIAL_INDEX=$(( HOURS_SINCE_REFERENCE % 14 ))
            
            # Map trial index to actual trial IDs
            case $TRIAL_INDEX in
              0) echo "trial_id=1" >> $GITHUB_OUTPUT ;;   # AA
              1) echo "trial_id=2" >> $GITHUB_OUTPUT ;;   # HRC
              2) echo "trial_id=3" >> $GITHUB_OUTPUT ;;   # SO
              3) echo "trial_id=5" >> $GITHUB_OUTPUT ;;   # MoL
              4) echo "trial_id=6" >> $GITHUB_OUTPUT ;;   # HoF
              5) echo "trial_id=7" >> $GITHUB_OUTPUT ;;   # AS
              6) echo "trial_id=8" >> $GITHUB_OUTPUT ;;   # CR
              7) echo "trial_id=12" >> $GITHUB_OUTPUT ;;  # SS
              8) echo "trial_id=14" >> $GITHUB_OUTPUT ;;  # KA
              9) echo "trial_id=15" >> $GITHUB_OUTPUT ;;  # RG
              10) echo "trial_id=16" >> $GITHUB_OUTPUT ;;  # DSR
              11) echo "trial_id=17" >> $GITHUB_OUTPUT ;;  # SE
              12) echo "trial_id=18" >> $GITHUB_OUTPUT ;;  # LC
              13) echo "trial_id=19" >> $GITHUB_OUTPUT ;;  # OC
              *) echo "trial_id=1" >> $GITHUB_OUTPUT ;;    # Default to AA
            esac
            
            echo "Current time: $(date -u '+%Y-%m-%d %H:%M') UTC"
            echo "Hours since 20:00 UTC reference: $HOURS_SINCE_REFERENCE"
            echo "Trial index: $TRIAL_INDEX"
          fi
      
      - name: Checkout main branch
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Download existing builds.json
        run: |
          mkdir -p output
          curl -s https://esobuild.com/builds.json -o output/builds.json || echo '{"trials": {}}' > output/builds.json
      
      - name: Run build analysis for trial
        env:
          ESOLOGS_ID: ${{ secrets.ESOLOGS_ID }}
          ESOLOGS_SECRET: ${{ secrets.ESOLOGS_SECRET }}
        run: |
          python -m src.eso_build_o_rama.main --trial-id ${{ steps.trial.outputs.trial_id }}
      
      - name: Copy static assets to output
        run: |
          cp -r static output/
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: custom
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: output
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4