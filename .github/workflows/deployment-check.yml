name: Deployment Readiness Check

on:
  pull_request:
    branches:
      - main
      - develop
  push:
    branches:
      - develop
      - 'feature/**'
      - 'bugfix/**'
  workflow_dispatch:

jobs:
  deployment-check:
    name: Validate Generated Site
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install beautifulsoup4
          
      - name: Generate test build
        run: |
          python -m src.eso_build_o_rama.main --trial-id 1
        env:
          ESO_LOGS_CLIENT_ID: ${{ secrets.ESO_LOGS_CLIENT_ID }}
          ESO_LOGS_CLIENT_SECRET: ${{ secrets.ESO_LOGS_CLIENT_SECRET }}
          
      - name: Run deployment check
        run: |
          python scripts/deployment_check.py output-dev
          
      - name: Upload check results as artifact
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: deployment-check-results
          path: output-dev/
          retention-days: 7
          
      - name: Comment on PR (if failed)
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ **Deployment Check Failed**\n\nThe pre-deployment validation found issues. Please run `python scripts/deployment_check.py output-dev` locally to see details.'
            })
            
      - name: Comment on PR (if passed)
        if: success() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '✅ **Deployment Check Passed**\n\nAll pre-deployment validations passed. Ready to merge!'
            })

